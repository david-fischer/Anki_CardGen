#: import exists os.path.exists
#: import colors  kivymd.color_definitions.colors
#: import get_color_from_hex kivy.utils.get_color_from_hex

<CheckTile>:
    on_press: self.checked = not self.checked# print(self.checked,self.opacity)
    on_checked: self.opacity = self.checked_op if self.checked else self.unchecked_op
    on_source: self.reload_image()#root.source if exists(root.source) else root.alternative_source

    FloatLayout:
        id: float_layout
        size_hint: 1,1
        FitImage:
            id: fit_image
            pos_hint: {"center_x": .5, "center_y": .5}
            source: root.source if exists(root.source) else root.alternative_source

        MDSpinner:
            id: spinner
            active:root.is_loading
            size_hint: 0.5,0.5
            pos_hint:  {"center_x": .5, "center_y": .5}



<ImgPick>:
    GridLayout:
        id: grid_layout
        cols: 2
        row_default_height: (self.width - self.cols*self.spacing[0]) / self.cols*3/4
        row_force_default: True
        size_hint_y: None
        height: self.minimum_height
        padding: dp(4), dp(4)
        spacing: dp(4)

<ImagePickerMain@FloatLayout>:
    MDSpinner:
        id: spinner
        active:False
        size_hint: 0.5,0.5
        pos_hint:  {"center_x": .5, "center_y": .5}

    ImgPick:
        id: image_picker
        source_folder: app.word.folder

    MDFloatingActionButton:
        icon: "reload"
        pos_hint: {"center_x": .9, "center_y": .9}
        on_release: image_picker.source_folder = app.word.folder; image_picker.refresh_view()

    MDFloatingActionButton:
        icon: "minus"
        pos_hint: {"center_x": .9, "center_y": .1}
        on_release: image_picker.remove_unchecked()

    MDFloatingActionButton:
        icon: "check"
        pos_hint: {"center_x": .2, "center_y": .1}
        on_release: print(f"You chose {image_picker.get_checked()}.")

    TextInput:
        text: "Search Term"
        size_hint: 0.2,0.05
        pos_hint:  {"center_x": .5, "center_y": .9}


